@using Fluxor.Blazor.Web.Components
@using FluxClient.Models

@inherits FluxorComponent

<h3>Operators table</h3>

<MudButton OnClick="AddOperator" Color="@Color.Success" Class="add-item-btn">Add New Operator</MudButton>
<MudDataGrid T="OperatorModel" Items=OperatorState.Value.Operators Style="width:95%" Height="65vh" FixedHeader="true"
             EditMode="@(DataGridEditMode.Form)" Bordered="true" Dense="true" EditTrigger="@(DataGridEditTrigger.Manual)">
    <Columns>
        <PropertyColumn Property="x => x.SelectedToBeDeleted" Title="Select">
            <CellTemplate>
                <MudCheckBox Value="context.Item.SelectedToBeDeleted" ValueChanged="@((bool isChecked) => ToggleSelectedToBeDeletedCheckbox(context.Item.Id))" />
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.OpId" Title="Operator Id">
            <CellTemplate>
                @if (_editingOperator?.Id == context.Item.Id)
                {
                    <MudTextField @bind-Value="_editingOperator.OpId" Style="font-size:14px" />
                }
                else
                {
                    @context.Item.OpId
                }
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.OpName" Title="Operator Name">
            <CellTemplate>
                @if (_editingOperator?.Id == context.Item.Id)
                {
                    <MudTextField @bind-Value="_editingOperator.OpName" Style="font-size:14px" />
                }
                else
                {
                    @context.Item.OpName
                }
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Access1" Title="Access 1">
            <CellTemplate>
                @if (_editingOperator?.Id == context.Item.Id)
                {
                    <MudCheckBox @bind-Value="_editingOperator.Access1" />
                }
                else
                {
                    <MudCheckBox Value="context.Item.Access1" ReadOnly="true" />
                }
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Access2" Title="Access 2">
            <CellTemplate>
                @if (_editingOperator?.Id == context.Item.Id)
                {
                    <MudCheckBox @bind-Value="_editingOperator.Access2" />
                }
                else
                {
                    <MudCheckBox Value="context.Item.Access2" ReadOnly="true" />
                }
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Access3" Title="Access 3">
            <CellTemplate>
                @if (_editingOperator?.Id == context.Item.Id)
                {
                    <MudCheckBox @bind-Value="_editingOperator.Access3" />
                }
                else
                {
                    <MudCheckBox Value="context.Item.Access3" ReadOnly="true" />
                }
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Description" Title="Description">
            <CellTemplate>
                @if (_editingOperator?.Id == context.Item.Id)
                {
                    <MudTextField @bind-Value="_editingOperator.Description" Style="font-size:14px" />
                }
                else
                {
                    @context.Item.Description
                }
            </CellTemplate>
        </PropertyColumn>
        <TemplateColumn CellClass="justify-end d-flex">
            <CellTemplate>
                @if (_editingOperator?.Id == context.Item.Id)
                {
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Save"
                                   OnClick="() => SaveChanges()" />
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Close"
                                   OnClick="CancelEditing" />
                }
                else
                {
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit"
                                   OnClick="() => StartEditing(context.Item)" />
                }
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>
<MudButton OnClick="RemoveSelectedOperators" Color="@Color.Error" Class="remove-item-btn">Remove Selected Operators</MudButton>